{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(npm audit:*)",
      "Bash(rg:*)",
      "Bash(grep:*)",
      "Bash(cp:*)",
      "Bash(npm run build:*)",
      "Bash(cat:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(curl:*)",
      "Bash(curl:*)",
      "Bash(git tag:*)",
      "Bash(git branch:*)",
      "Bash(echo:*)",
      "Bash(npm run build:*)",
      "Bash(npm run dev:*)",
      "WebFetch(domain:github.com)",
      "Bash(git rm:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(true)",
      "Bash(git push:*)",
      "Bash(npm run lint)",
      "WebFetch(domain:www.anthropic.com)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -l \"import.*WorkedExampleV2Test\")",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -l \"import.*WorkedExample[^C]\")",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -l \"import.*DragTest\")",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -l \"import.*DistributionSimulationLarge\")",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -l \"import.*DistributionSimulationFixed\")",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -l \"import.*DistributionSimulation[^F]\")",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -l \"import.*DistributionNoTransform\")",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -l \"import.*DistributionFixed\")",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -l \"import.*DistributionDebug\")",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -l \"import.*DistributionComparison\")",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -l \"drag-test\")",
      "Bash(rm:*)",
      "Bash(rm:*)",
      "Bash(npx eslint:*)",
      "Bash(npx babel:*)",
      "Bash(node:*)",
      "Bash(npm install:*)",
      "Bash(npx eslint:*)",
      "Bash(awk:*)",
      "Bash(touch:*)",
      "Bash(pkill:*)",
      "Bash(pkill:*)",
      "Bash(npx next:*)",
      "Bash(npm run lint:*)",
      "Bash(wget:*)",
      "mcp__ide__getDiagnostics",
      "Bash(timeout 10s npm run dev)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"C\\(\" src/components/01-introduction-to-probabilities/UnorderedSamples.jsx -n)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"setCalculationSteps\" src/components/01-introduction-to-probabilities/UnorderedSamples.jsx -n)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"setInteractionCount\" src/components/01-introduction-to-probabilities/UnorderedSamples.jsx -n)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -A 2 -B 2 \"TODO|FIXME|BUG|HACK\" src/)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -B 2 -A 2 \"onClick.*undefined|onChange.*undefined|on[A-Z].*\\?\\.\" src/)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -B 2 -A 2 \"\\.map\\(|\\.filter\\(|\\.find\\(|\\.forEach\\(\" src/)",
      "Bash(git filter-branch:*)",
      "Bash(git reset:*)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -A2 -B2 \"\\.map\\(\" src/components/AppSidebar.jsx)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -n \"withinBounds\" /Users/hananather/Desktop/Javascript/prob-lab/src/components/01-introduction-to-probabilities/SampleSpacesEvents.jsx)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -B5 -A5 \"useEffect\\(\" src/components/06-hypothesis-testing/HypothesisTestingGame.jsx)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -A15 \"const initializeGame = \" src/components/06-hypothesis-testing/HypothesisTestingGame.jsx)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -B2 -A2 \"/ 0\\b\" src/components/01-introduction-to-probabilities/ConditionalProbability.jsx)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -B5 -A5 \"console\\.log\" src/components/01-introduction-to-probabilities/OrderedSamples.jsx)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -B2 -A2 \"set[A-Z]\\w*\\([^(]*\\+\" src/components/CLTSimulation.jsx)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"console\\.(log|error|warn|info|debug)\" /Users/hananather/Desktop/Javascript/prob-lab/src --type js -n)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"console\\.(log|info|debug)\" /Users/hananather/Desktop/Javascript/prob-lab/src --type js -l)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"console\\.(warn|error)\" /Users/hananather/Desktop/Javascript/prob-lab/src --type js -n)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"console\\.warn\" /Users/hananather/Desktop/Javascript/prob-lab/src/components/01-introduction-to-probabilities/ConditionalProbability.jsx -B 2 -A 2)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"console\\.(log|error)\" /Users/hananather/Desktop/Javascript/prob-lab/src/components/01-introduction-to-probabilities/SampleSpacesEventsOptimized.jsx -n)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"colorScheme\\.chart\\.primary\" /Users/hananather/Desktop/Javascript/prob-lab/src --type js -B 2 -A 2)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"createColorScheme\" /Users/hananather/Desktop/Javascript/prob-lab/src/lib/design-system.js -A 30)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"colorSchemes\" /Users/hananather/Desktop/Javascript/prob-lab/src/lib/design-system.js -B 5 -A 20)",
      "Bash(git checkout:*)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -A 2 -B 2 \"\\.primary\" src/components --type jsx)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -A 2 -B 2 \"\\.primary\" src/components -g \"*.jsx\")",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"\\.primary\" src/components -g \"*.jsx\")",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"chipColors\" src/components -g \"*.jsx\" -A 2 -B 2)",
      "Bash(npx prettier:*)",
      "Bash(sed:*)",
      "Bash(# Section 3.0\nmv BridgeToContinuous.jsx 3-0-1-BridgeToContinuous.jsx\n\n# Section 3.1\nmv ContinuousDistributionsPDF.jsx 3-1-1-ContinuousDistributionsPDF.jsx\nmv IntegralWorkedExample.jsx 3-1-2-IntegralWorkedExample.jsx\n\n# Section 3.2\nmv ContinuousExpectationVariance.jsx 3-2-1-ContinuousExpectationVariance.jsx\n\n# Section 3.3\nmv NormalZScoreExplorer.jsx 3-3-1-NormalZScoreExplorer.jsx\nmv NormalZScoreWorkedExample.jsx 3-3-2-NormalZScoreWorkedExample.jsx\nmv EmpiricalRule.jsx 3-3-3-EmpiricalRule.jsx\nmv ZTableLookupRedesigned.jsx 3-3-4-ZTableLookup.jsx\nmv ZScorePracticeProblems.jsx 3-3-5-ZScorePracticeProblems.jsx\nmv ProcessCapability.jsx 3-3-6-ProcessCapability.jsx\n\n# Section 3.4\nmv ExponentialDistribution.jsx 3-4-1-ExponentialDistribution.jsx\nmv ExponentialDistributionWorkedExample.jsx 3-4-2-ExponentialDistributionWorkedExample.jsx\n\n# Section 3.5\nmv GammaDistribution.jsx 3-5-1-GammaDistribution.jsx\nmv GammaDistributionWorkedExample.jsx 3-5-2-GammaDistributionWorkedExample.jsx\n\n# Section 3.7\nmv NormalApproxBinomial.jsx 3-7-1-NormalApproxBinomial.jsx\nmv NormalApproxBinomialWorkedExample.jsx 3-7-2-NormalApproxBinomialWorkedExample.jsx)",
      "Bash(# Section 3.0\nmv BridgeToContinuousClient.jsx 3-0-1-BridgeToContinuousClient.jsx\n\n# Section 3.1\nmv ContinuousDistributionsPDFClient.jsx 3-1-1-ContinuousDistributionsPDFClient.jsx\n\n# Section 3.2\nmv ContinuousExpectationVarianceClient.jsx 3-2-1-ContinuousExpectationVarianceClient.jsx\n\n# Section 3.3\nmv NormalZScoreExplorerClient.jsx 3-3-1-NormalZScoreExplorerClient.jsx\nmv EmpiricalRuleClient.jsx 3-3-3-EmpiricalRuleClient.jsx\nmv ZTableLookupRedesignedClient.jsx 3-3-4-ZTableLookupClient.jsx\nmv ZScorePracticeProblemsClient.jsx 3-3-5-ZScorePracticeProblemsClient.jsx\nmv ProcessCapabilityClient.jsx 3-3-6-ProcessCapabilityClient.jsx\n\n# Section 3.4\nmv ExponentialDistributionClient.jsx 3-4-1-ExponentialDistributionClient.jsx\n\n# Section 3.5\nmv GammaDistributionClient.jsx 3-5-1-GammaDistributionClient.jsx\n\n# Section 3.7\nmv NormalApproxBinomialClient.jsx 3-7-1-NormalApproxBinomialClient.jsx)",
      "Bash(# Update imports in all client files\nfor file in *Client.jsx; do\n  # Update BridgeToContinuous import\n  sed -i '' 's/from \"\\.\\/BridgeToContinuous\"/from \".\\/3-0-1-BridgeToContinuous\"/' \"$file\"\n  \n  # Update ContinuousDistributionsPDF import\n  sed -i '' 's/from \"\\.\\/ContinuousDistributionsPDF\"/from \".\\/3-1-1-ContinuousDistributionsPDF\"/' \"$file\"\n  \n  # Update ContinuousExpectationVariance import\n  sed -i '' 's/from \"\\.\\/ContinuousExpectationVariance\"/from \".\\/3-2-1-ContinuousExpectationVariance\"/' \"$file\"\n  \n  # Update Normal distribution imports\n  sed -i '' 's/from \"\\.\\/NormalZScoreExplorer\"/from \".\\/3-3-1-NormalZScoreExplorer\"/' \"$file\"\n  sed -i '' 's/from \"\\.\\/EmpiricalRule\"/from \".\\/3-3-3-EmpiricalRule\"/' \"$file\"\n  sed -i '' 's/from \"\\.\\/ZTableLookupRedesigned\"/from \".\\/3-3-4-ZTableLookup\"/' \"$file\"\n  sed -i '' 's/from \"\\.\\/ZScorePracticeProblems\"/from \".\\/3-3-5-ZScorePracticeProblems\"/' \"$file\"\n  sed -i '' 's/from \"\\.\\/ProcessCapability\"/from \".\\/3-3-6-ProcessCapability\"/' \"$file\"\n  \n  # Update Exponential imports\n  sed -i '' 's/from \"\\.\\/ExponentialDistribution\"/from \".\\/3-4-1-ExponentialDistribution\"/' \"$file\"\n  \n  # Update Gamma imports\n  sed -i '' 's/from \"\\.\\/GammaDistribution\"/from \".\\/3-5-1-GammaDistribution\"/' \"$file\"\n  \n  # Update Normal Approximation imports\n  sed -i '' 's/from \"\\.\\/NormalApproxBinomial\"/from \".\\/3-7-1-NormalApproxBinomial\"/' \"$file\"\ndone)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -n \"(\\b\\d{2,}\\b)(?!px|ms|%|rem|em)\" /Users/hananather/Desktop/Javascript/prob-lab/src/components --type jsx)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -n \"(\\b\\d{2,}\\b)(?!px|ms|%|rem|em)\" /Users/hananather/Desktop/Javascript/prob-lab/src/components -g \"*.jsx\")",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg -n '\\b(30|40|50|60|70|80|90|100|150|200|250|300|400|500|600|700|800|900|1000)\\b' /Users/hananather/Desktop/Javascript/prob-lab/src/components -g \"*.jsx\")",
      "Bash(npm test:*)",
      "Bash(npm run:*)",
      "Bash(chmod:*)",
      "Bash(for file in src/components/03-continuous-random-variables/*.jsx)",
      "Bash(do if grep -q \"contentRef\\.\" \"$file\")",
      "Bash(! grep -q \"const contentRef = useRef\" \"$file\")",
      "Bash(then echo \"$file\")",
      "Bash(fi)",
      "Bash(done)",
      "Bash(# Update all remaining files\nfor file in 3-5-1-GammaDistribution.jsx 3-5-2-GammaDistributionWorkedExample.jsx 3-7-1-NormalApproxBinomial.jsx 3-7-2-NormalApproxBinomialWorkedExample.jsx; do\n    echo \"Processing $file...\"\n    \n    # Add import if not already present\n    if ! grep -q \"useSafeMathJax\" \"$file\"; then\n        # Find the last import line and add our import after it\n        last_import=$(grep -n \"^import\" \"$file\" | tail -1 | cut -d: -f1)\n        if [ ! -z \"$last_import\" ]; then\n            sed -i '' \"${last_import}a\\\\\nimport { useSafeMathJax } from '../../utils/mathJaxFix';\" \"$file\"\n        fi\n    fi\ndone)",
      "Bash(npm ls:*)",
      "Bash(npm outdated)",
      "Bash(for:*)",
      "Bash(do)",
      "Bash(if ! grep -q \"import.*VisualizationContainer.*from\" \"$file\")",
      "Bash(then)",
      "Bash(/dev/null)",
      "Bash(git fetch:*)",
      "Bash(git merge:*)",
      "Bash(npm view:*)",
      "Bash(npm uninstall:*)",
      "Bash(do grep -o \"d3\\.\\w\\+\" \"$file\")",
      "Bash(timeout 10 npm run dev:*)",
      "WebFetch(domain:brilliant.org)",
      "Bash(open http://localhost:3001/test-binomial)",
      "Bash(git ls-tree:*)",
      "WebFetch(domain:en.wikipedia.org)",
      "Bash(git mv:*)",
      "Bash(git mv:*)",
      "Bash(tree:*)",
      "Bash(if [ -d \"/Users/hananather/Desktop/Javascript/prob-lab/src/app/tutorials\" ])",
      "Bash([ -z \"$(ls -A /Users/hananather/Desktop/Javascript/prob-lab/src/app/tutorials)\" ])",
      "Bash(then rm -rf /Users/hananather/Desktop/Javascript/prob-lab/src/app/tutorials)",
      "Bash(else echo \"Tutorials directory is not empty or doesn''t exist\")",
      "Bash(diff:*)",
      "Bash(do echo \"=== $file ===\")",
      "WebFetch(domain:localhost)",
      "Bash(git log:*)",
      "Bash(claude mcp:*)",
      "Bash(open http://localhost:3001/learn)",
      "Bash(timeout 10 npm run build:*)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"dangerouslySetInnerHTML.*__html\" src/components/learn/LaTeXDiagnostic.jsx -A 1 -B 1)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"dangerouslySetInnerHTML.*__html.*formula\" src/components/ui/patterns/LaTeXTestComponents.jsx -A 1 -B 1)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"DirectComparisonTest formula=\" src/components/learn/LaTeXEmpiricalTest.jsx)",
      "Bash(do echo -e \"\\nChecking $dir:\")",
      "Bash(timeout 15s npm run dev)",
      "Bash(/Users/hananather/.npm-global/lib/node_modules/@anthropic-ai/claude-code/vendor/ripgrep/arm64-darwin/rg \"ComparisonTable.*headers=\" /Users/hananather/Desktop/Javascript/prob-lab/src/components/01-introduction-to-probabilities -g \"*.jsx\" -n)",
      "Bash(do if grep -P \"[\\x{1F300}-\\x{1F9FF}|\\x{2600}-\\x{26FF}|\\x{2700}-\\x{27BF}]\" \"$file\")",
      "Bash(perl:*)",
      "Bash(do if perl -ne 'exit 1 if /[\\x{1F300}-\\x{1F9FF}|\\x{2600}-\\x{26FF}|\\x{2700}-\\x{27BF}|\\x{1F000}-\\x{1F2FF}|\\x{1F900}-\\x{1F9FF}]/' \"$file\")",
      "Bash(then echo \"$file: No emojis\")",
      "Bash(else echo \"$file: Contains emojis\")",
      "Bash(timeout 60 npm run build)",
      "Bash(python3:*)",
      "Bash(git restore:*)"
    ],
    "deny": []
  }
}